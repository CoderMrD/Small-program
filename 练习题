"""
> 0x01
> 将[1,2,3,4,5,6,7,8,9]  输出成 [1,2,3,4],[5,6,7,8],[9]
"""

l = [1,2,3,4,5,6,7,8,9]

# 法一
for i in range(0,len(l),4):
    print(l[i:i+4],end=',')

# 法二
[l[i:i+4]for i in range(0,len(l),4)]

"""
> 0x02
> 实现字符串的反转，如：输入abc，输出cba
"""

str="abc"

# 使用索引
str[::-1]

# 循环拼接
order = ""
count = len(string)
for i in range(count-1,-1,-1):
    order = order+string[i]
print(order)

"""
>0x03
>将[{1:"a"},{2:"b"}]   输出成  [{"value":"a","key":1},{"value":"b","key":2}]
"""
l = [{1:"a"},{2:"b"}] 

dict_={}
l1=[]
for i in l:
    for key in i:
        dict_["value"]=i.get(key)
        dict_["key"]=key
    l1.append(dict_)


"""
>0x04
>列表去重
"""
l = [1,2,1,3,12,12,13]

# set去重，缺点：不能保持原有的顺序
ids = list(set(l))

# 循环遍历
news_ids = []
for id in ids:
    if id not in news_ids:
        news_ids.append(id)
print(news_ids)

# 匿名函数lamada加reduce
# 如果x在y里面就是x，如果没有则传入进去x+列表y
func = lambda x,y:x if y in x else x + [y]
reduce(func, [[], ] + l)

# 使用while循环
def delRepeat(l):
 for x in liebiao:
  while l.count(x)>1:
   del l[l.index(x)]
 return l

"""
>0x05
>给列表中的字典排序
"""
l = [{"age":10},{"age":20},{"age":3}]

newlist = sorted(l, key=lambda k: k['day'])



